<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[on start Test!!]]>
    </line>
    <line>
      <![CDATA[Test start!!]]>
    </line>
    <line>
      <![CDATA[Test successfull!!]]>
    </line>
    <line>
      <![CDATA[Test start!!]]>
    </line>
    <line>
      <![CDATA[This method is failed aand taken a ScreenshotinvalidLoginMethod]]>
    </line>
  </reporter-output>
  <suite started-at="2023-08-03T16:11:04 IST" name="Default suite" finished-at="2023-08-03T16:11:22 IST" duration-ms="18357">
    <groups>
    </groups>
    <test started-at="2023-08-03T16:11:04 IST" name="Default test" finished-at="2023-08-03T16:11:22 IST" duration-ms="18357">
      <class name="testPackage.ValidLoginTestCase">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testPackage.ValidLoginTestCase@2f4948e4]" started-at="2023-08-03T16:11:04 IST" name="setUp" finished-at="2023-08-03T16:11:16 IST" duration-ms="11812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validLoginMethod()[pri:0, instance:testPackage.ValidLoginTestCase@2f4948e4]" started-at="2023-08-03T16:11:16 IST" name="validLoginMethod" finished-at="2023-08-03T16:11:17 IST" duration-ms="847" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test start!!]]>
            </line>
            <line>
              <![CDATA[Test successfull!!]]>
            </line>
          </reporter-output>
        </test-method> <!-- validLoginMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testPackage.ValidLoginTestCase@2f4948e4]" started-at="2023-08-03T16:11:17 IST" name="tearDown" finished-at="2023-08-03T16:11:17 IST" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testPackage.ValidLoginTestCase@2f4948e4]" started-at="2023-08-03T16:11:18 IST" name="setUp" finished-at="2023-08-03T16:11:21 IST" duration-ms="3781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidLoginMethod()[pri:0, instance:testPackage.ValidLoginTestCase@2f4948e4]" started-at="2023-08-03T16:11:21 IST" name="invalidLoginMethod" finished-at="2023-08-03T16:11:21 IST" depends-on-methods="testPackage.ValidLoginTestCase.validLoginMethod" duration-ms="123" status="FAIL">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Your InputStream was neither an OLE2 stream, nor an OOXML stream or you haven't provide the poi-ooxml*.jar in the classpath/modulepath - FileMagic: OOXML, having providers: [org.apache.poi.hssf.usermodel.HSSFWorkbookFactory@7979b8b7]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Your InputStream was neither an OLE2 stream, nor an OOXML stream or you haven't provide the poi-ooxml*.jar in the classpath/modulepath - FileMagic: OOXML, having providers: [org.apache.poi.hssf.usermodel.HSSFWorkbookFactory@7979b8b7]
at org.apache.poi.ss.usermodel.WorkbookFactory.wp(WorkbookFactory.java:334)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:224)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:185)
at genericPackage.Flib.getLastRowCount(Flib.java:37)
at testPackage.ValidLoginTestCase.invalidLoginMethod(ValidLoginTestCase.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
            <line>
              <![CDATA[Test start!!]]>
            </line>
            <line>
              <![CDATA[This method is failed aand taken a ScreenshotinvalidLoginMethod]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLoginMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testPackage.ValidLoginTestCase@2f4948e4]" started-at="2023-08-03T16:11:22 IST" name="tearDown" finished-at="2023-08-03T16:11:22 IST" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testPackage.ValidLoginTestCase -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
